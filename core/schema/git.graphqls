extend type Query {
    "Queries a git repository."
    git(
        """
        Url of the git repository.
        Can be formatted as https://{host}/{owner}/{repo}, git@{host}/{owner}/{repo}
        Suffix ".git" is optional.
        Example:
        https://github.com/dagger/dagger
        git@github.com/dagger/dagger
        https://github.com/dagger/dagger.git
        """
        url: String!,

        "Set to true to keep .git directory."
        keepGitDir: Boolean
    ): GitRepository!
}

"A git repository."
type GitRepository {
    "Lists of branches on the repository."
    branches: [String!]!

    "Returns details on one branch."
    branch(
        """
        Branch's name
        Example:
        main
        """
        name: String!
    ): GitRef!

    "Lists of tags on the repository."
    tags: [String!]!

    "Returns details on one tag."
    tag(
        """
        Tag's name
        Example:
        v0.3.9
        """
        name: String!
    ): GitRef!

    "Returns details on one commit."
    commit(
        """
        Identifier of the commit.
        Example:
        b6315d8f2810962c601af73f86831f6866ea798b
        """
        id: String!
    ): GitRef!
}

"A git ref (tag, branch or commit)."
type GitRef {
    "The digest of the current value of this ref."
    digest: String!

    "The filesystem tree at this ref."
    tree(sshKnownHosts: String, sshAuthSocket: SocketID): Directory!
}
